// Functions
// convert px to rem
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return #{$remSize}rem;
}


/*breakpoints start*/
@mixin breakpoint($point) {
  @if $point==xs {
    @media (max-width: 575px) {
      @content;
    }
  } //screen320-480
  @else if $point==xxs {
    @media (max-width: 480px) {
      @content;
    }
  } @else if $point==sm {
    @media (max-width: 767px) {
      @content;
    }
  } //screen481-768

//max size breakpoints
  @else if $point==screen_1440 {
    @media (max-width: 1440px) {
      @content;
    }
  } //screen

  @else if $point==md {
    @media (max-width: 992px) {
      @content;
    }
  } //screen

  @else if $point==m {
    @media (max-width: 767px) {
      @content;
    }
  } //screen

  @else if $point==sm {
    @media (max-width: 576px) {
      @content;
    }
  } //screen

  
  @else {
    @media (max-width: $point) {
      @content;
    }
  }
}
/*breakpoints end*/

/*border radius start*/
@mixin border-radius($topLeft, $topRight, $bottomRight, $bottomLeft) {
  border-radius: $topLeft $topRight $bottomRight $bottomLeft;
  -moz-border-radius: $topLeft $topRight $bottomRight $bottomLeft;
  -webkit-border-radius: $topLeft $topRight $bottomRight $bottomLeft;
}
/*border radius end*/

/*box-shadow start*/
@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow: inset $top $left $blur $color;
    -moz-box-shadow: inset $top $left $blur $color;
    box-shadow: inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}
/*box-shadow end*/

@mixin rotate($val) {
  -ms-transform: rotate($val); /* IE 9 */
  -webkit-transform: rotate($val); /* Safari prior 9.0 */
  transform: rotate($val); /* Standard syntax */
}

// mixin - font size
@mixin fontSize($size) {
  font-size: $size; //Fallback in px
  font-size: calculateRem($size);
}

// mixin - triangle
@mixin triangle($borderSize, $topColor, $rightColor, $bottomColor, $leftColor) {
  border: $borderSize solid transparent;
  border-top-color: $topColor;
  border-right-color: $rightColor;
  border-bottom-color: $bottomColor;
  border-left-color: $leftColor;
}

// mixin - shap
@mixin shape($leftXaxis, $leftYaxis, $rightXaxis, $rightYaxis, $diagonalXaxis, $diagonalYaxis, $color) {
  background-color: $color;
  clip-path: polygon($leftXaxis $leftYaxis, $rightXaxis $rightYaxis, $diagonalXaxis $diagonalYaxis);
}
